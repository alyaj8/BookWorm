{"version":3,"sources":["index.ts"],"names":[],"mappings":"m0BAeA,4D,0BACA,sE,oCACA,sE,oCACA,oE,kCACA,kE,gCACA,oE,kCACA,8D,4BACA,qG,wDACA,uG,0DACA,mF,sCACA,+E,kCACA,sD,oBAiBA,iVACA,gC","sourcesContent":["import type {\n  ApplePayError,\n  CardActionError,\n  ConfirmPaymentError,\n  ConfirmSetupIntentError,\n  CreatePaymentMethodError,\n  CreateTokenError,\n  GooglePayError,\n  PaymentSheetError,\n  RetrievePaymentIntentError,\n  RetrieveSetupIntentError,\n  StripeError,\n  VerifyMicrodepositsError,\n  CollectBankAccountError,\n} from './Errors';\nimport * as ApplePay from './ApplePay';\nimport * as PaymentIntent from './PaymentIntent';\nimport * as PaymentMethod from './PaymentMethod';\nimport * as PaymentSheet from './PaymentSheet';\nimport * as SetupIntent from './SetupIntent';\nimport * as ThreeDSecure from './ThreeDSecure';\nimport * as GooglePay from './GooglePay';\nimport * as ApplePayButtonComponent from './components/ApplePayButtonComponent';\nimport * as AuBECSDebitFormComponent from './components/AuBECSDebitFormComponent';\nimport * as CardFieldInput from './components/CardFieldInput';\nimport * as CardFormView from './components/CardFormView';\nimport * as Token from './Token';\n\nexport {\n  ApplePay,\n  PaymentIntent,\n  PaymentMethod,\n  PaymentSheet,\n  SetupIntent,\n  ThreeDSecure,\n  GooglePay,\n  ApplePayButtonComponent,\n  AuBECSDebitFormComponent,\n  CardFieldInput,\n  CardFormView,\n  Token,\n};\n\nexport * from './Errors';\nexport { Address, BillingDetails } from './Common';\n\n/**\n * @ignore\n */\nexport type Dictionary<T> = {\n  [key: string]: T;\n};\n\nexport interface AppInfo {\n  name?: string;\n  partnerId?: string;\n  url?: string;\n  version?: string;\n}\n\nexport type CreatePaymentMethodResult =\n  | {\n      paymentMethod: PaymentMethod.Result;\n      error?: undefined;\n    }\n  | {\n      paymentMethod?: undefined;\n      error: StripeError<CreatePaymentMethodError>;\n    };\n\nexport type RetrievePaymentIntentResult =\n  | {\n      paymentIntent: PaymentIntent.Result;\n      error?: undefined;\n    }\n  | {\n      paymentIntent?: undefined;\n      error: StripeError<RetrievePaymentIntentError>;\n    };\n\nexport type RetrieveSetupIntentResult =\n  | {\n      setupIntent: SetupIntent.Result;\n      error?: undefined;\n    }\n  | {\n      setupIntent?: undefined;\n      error: StripeError<RetrieveSetupIntentError>;\n    };\n\nexport type ConfirmPaymentResult =\n  | {\n      paymentIntent: PaymentIntent.Result;\n      error?: undefined;\n    }\n  | {\n      paymentIntent?: undefined;\n      error: StripeError<ConfirmPaymentError>;\n    };\n\nexport type HandleNextActionResult =\n  | {\n      paymentIntent: PaymentIntent.Result;\n      error?: undefined;\n    }\n  | {\n      paymentIntent?: undefined;\n      error: StripeError<CardActionError>;\n    };\n\nexport type ConfirmSetupIntentResult =\n  | {\n      setupIntent: SetupIntent.Result;\n      error?: undefined;\n    }\n  | {\n      setupIntent?: undefined;\n      error: StripeError<ConfirmSetupIntentError>;\n    };\n\nexport type CreateTokenForCVCUpdateResult =\n  | {\n      tokenId: string;\n      error?: undefined;\n    }\n  | {\n      tokenId?: undefined;\n      error: StripeError<ConfirmSetupIntentError>;\n    };\n\nexport type InitPaymentSheetResult =\n  | {\n      paymentOption?: PaymentSheet.PaymentOption;\n      error?: undefined;\n    }\n  | {\n      paymentOption?: undefined;\n      error: StripeError<PaymentSheetError>;\n    };\n\nexport type PresentPaymentSheetResult =\n  | {\n      paymentOption: PaymentSheet.PaymentOption;\n      error?: undefined;\n    }\n  | {\n      paymentOption?: undefined;\n      error: StripeError<PaymentSheetError>;\n    };\n\nexport type CreateTokenResult =\n  | {\n      token: Token.Result;\n      error?: undefined;\n    }\n  | {\n      token?: undefined;\n      error: StripeError<CreateTokenError>;\n    };\n\nexport type ConfirmPaymentSheetPaymentResult = {\n  error?: StripeError<PaymentSheetError>;\n};\n\nexport type ApplePayResult =\n  | {\n      paymentMethod: PaymentMethod.Result;\n      error?: undefined;\n    }\n  | {\n      paymentMethod?: undefined;\n      error: StripeError<ApplePayError>;\n    };\n\nexport interface InitStripeParams {\n  publishableKey: string;\n  stripeAccountId?: string;\n  threeDSecureParams?: ThreeDSecure.ConfigurationParams;\n  merchantIdentifier?: string;\n  urlScheme?: string;\n  setReturnUrlSchemeOnAndroid?: boolean;\n}\n\nexport interface InitialiseParams extends InitStripeParams {\n  appInfo: AppInfo;\n}\n\nexport type GooglePayInitResult =\n  | {\n      error?: undefined;\n    }\n  | {\n      error: StripeError<GooglePayError>;\n    };\n\nexport type PayWithGooglePayResult =\n  | {\n      error?: undefined;\n    }\n  | {\n      error: StripeError<GooglePayError>;\n    };\n\nexport type CreateGooglePayPaymentMethodResult =\n  | {\n      paymentMethod: PaymentMethod.Result;\n      error?: undefined;\n    }\n  | {\n      paymentMethod?: undefined;\n      error: StripeError<GooglePayError>;\n    };\n\nexport type OpenApplePaySetupResult =\n  | {\n      error?: undefined;\n    }\n  | {\n      error: StripeError<ApplePayError>;\n    };\n\nexport type VerifyMicrodepositsParams =\n  | {\n      amounts: number[];\n      descriptorCode?: undefined;\n    }\n  | {\n      amounts?: undefined;\n      descriptorCode: string;\n    };\n\nexport type VerifyMicrodepositsForPaymentResult =\n  | {\n      paymentIntent: PaymentIntent.Result;\n      error?: undefined;\n    }\n  | {\n      paymentIntent?: undefined;\n      error: StripeError<VerifyMicrodepositsError>;\n    };\n\nexport type VerifyMicrodepositsForSetupResult =\n  | {\n      setupIntent: SetupIntent.Result;\n      error?: undefined;\n    }\n  | {\n      setupIntent?: undefined;\n      error: StripeError<VerifyMicrodepositsError>;\n    };\n\nexport type CollectBankAccountForPaymentResult =\n  | {\n      paymentIntent: PaymentIntent.Result;\n      error?: undefined;\n    }\n  | {\n      paymentIntent?: undefined;\n      error: StripeError<CollectBankAccountError>;\n    };\n\nexport type CollectBankAccountForSetupResult =\n  | {\n      setupIntent: SetupIntent.Result;\n      error?: undefined;\n    }\n  | {\n      setupIntent?: undefined;\n      error: StripeError<CollectBankAccountError>;\n    };\n\nexport type GooglePayCardToken = {\n  id: string;\n  cardLastFour: string;\n  network: number;\n  serviceProvider: number;\n  issuer: string;\n  status:\n    | 'TOKEN_STATE_NEEDS_IDENTITY_VERIFICATION'\n    | 'TOKEN_STATE_PENDING'\n    | 'TOKEN_STATE_SUSPENDED'\n    | 'TOKEN_STATE_ACTIVE'\n    | 'TOKEN_STATE_FELICA_PENDING_PROVISIONING'\n    | 'TOKEN_STATE_UNTOKENIZED';\n};\n\nexport type IsCardInWalletResult =\n  | {\n      isInWallet: boolean;\n      token?: GooglePayCardToken;\n      error?: undefined;\n    }\n  | {\n      isInWallet?: undefined;\n      token?: undefined;\n      error: StripeError<GooglePayError>;\n    };\n"]}