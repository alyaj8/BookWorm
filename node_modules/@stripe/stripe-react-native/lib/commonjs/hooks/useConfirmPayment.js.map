{"version":3,"sources":["useConfirmPayment.tsx"],"names":["useConfirmPayment","loading","setLoading","confirmPayment","_confirmPayment","paymentIntentClientSecret","data","options","result"],"mappings":"mWAAA,4BAEA,uCAKO,QAASA,CAAAA,iBAAT,EAA6B,CAClC,cAA8B,oBAAS,KAAT,CAA9B,qDAAOC,OAAP,eAAgBC,UAAhB,eACA,eAA2B,2BAA3B,CAAQC,cAAR,YAAQA,cAAR,CAEA,GAAMC,CAAAA,eAAe,CAAG,uBACtB,iBACEC,yBADF,CAEEC,IAFF,uJAGEC,OAHF,+CAG0C,EAH1C,CAKEL,UAAU,CAAC,IAAD,CAAV,CALF,kDAOuBC,cAAc,CACjCE,yBADiC,CAEjCC,IAFiC,CAGjCC,OAHiC,CAPrC,SAOQC,MAPR,eAaEN,UAAU,CAAC,KAAD,CAAV,CAbF,gCAeSM,MAfT,uEADsB,CAkBtB,CAACL,cAAD,CAlBsB,CAAxB,CAqBA,MAAO,CACLA,cAAc,CAAEC,eADX,CAELH,OAAO,CAAPA,OAFK,CAAP,CAID","sourcesContent":["import { useCallback, useState } from 'react';\nimport type { PaymentMethod } from '../types';\nimport { useStripe } from './useStripe';\n\n/**\n * useConfirmPayment hook\n */\nexport function useConfirmPayment() {\n  const [loading, setLoading] = useState(false);\n  const { confirmPayment } = useStripe();\n\n  const _confirmPayment = useCallback(\n    async (\n      paymentIntentClientSecret: string,\n      data: PaymentMethod.ConfirmParams,\n      options: PaymentMethod.ConfirmOptions = {}\n    ) => {\n      setLoading(true);\n\n      const result = await confirmPayment(\n        paymentIntentClientSecret,\n        data,\n        options\n      );\n\n      setLoading(false);\n\n      return result;\n    },\n    [confirmPayment]\n  );\n\n  return {\n    confirmPayment: _confirmPayment,\n    loading,\n  };\n}\n"]}