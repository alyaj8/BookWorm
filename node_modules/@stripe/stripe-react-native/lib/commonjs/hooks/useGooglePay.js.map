{"version":3,"sources":["useGooglePay.tsx"],"names":["useGooglePay","isGooglePaySupported","initGooglePay","presentGooglePay","createGooglePayPaymentMethod","loading","setLoading","_isGooglePaySupported","params","result","_initGooglePay","_presentGooglePay","_createGooglePayPaymentMethod"],"mappings":"4WAAA,4BAEA,uCAKO,QAASA,CAAAA,YAAT,EAAwB,CAC7B,eAKI,2BALJ,CACEC,oBADF,YACEA,oBADF,CAEEC,aAFF,YAEEA,aAFF,CAGEC,gBAHF,YAGEA,gBAHF,CAIEC,4BAJF,YAIEA,4BAJF,CAMA,cAA8B,oBAAS,KAAT,CAA9B,qDAAOC,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,qBAAqB,CAAG,0EAC5B,UAAOC,MAAP,CAAgD,CAC9CF,UAAU,CAAC,IAAD,CAAV,CAEA,GAAMG,CAAAA,MAAM,MAASR,CAAAA,oBAAoB,CAACO,MAAD,CAAzC,CACAF,UAAU,CAAC,KAAD,CAAV,CAEA,MAAOG,CAAAA,MAAP,CACD,CAR2B,8DAS5B,CAACR,oBAAD,CAT4B,CAA9B,CAYA,GAAMS,CAAAA,cAAc,CAAG,2EACrB,UAAOF,MAAP,CAAwC,CACtCF,UAAU,CAAC,IAAD,CAAV,CAEA,GAAMG,CAAAA,MAAM,MAASP,CAAAA,aAAa,CAACM,MAAD,CAAlC,CACAF,UAAU,CAAC,KAAD,CAAV,CAEA,MAAOG,CAAAA,MAAP,CACD,CARoB,gEASrB,CAACP,aAAD,CATqB,CAAvB,CAYA,GAAMS,CAAAA,iBAAiB,CAAG,2EACxB,UAAOH,MAAP,CAA2C,CACzCF,UAAU,CAAC,IAAD,CAAV,CAEA,GAAMG,CAAAA,MAAM,MAASN,CAAAA,gBAAgB,CAACK,MAAD,CAArC,CACAF,UAAU,CAAC,KAAD,CAAV,CAEA,MAAOG,CAAAA,MAAP,CACD,CARuB,gEASxB,CAACN,gBAAD,CATwB,CAA1B,CAYA,GAAMS,CAAAA,6BAA6B,CAAG,2EACpC,UAAOJ,MAAP,CAAuD,CACrDF,UAAU,CAAC,IAAD,CAAV,CAEA,GAAMG,CAAAA,MAAM,MAASL,CAAAA,4BAA4B,CAACI,MAAD,CAAjD,CACAF,UAAU,CAAC,KAAD,CAAV,CAEA,MAAOG,CAAAA,MAAP,CACD,CARmC,gEASpC,CAACL,4BAAD,CAToC,CAAtC,CAYA,MAAO,CACLC,OAAO,CAAPA,OADK,CAELJ,oBAAoB,CAAEM,qBAFjB,CAGLL,aAAa,CAAEQ,cAHV,CAILP,gBAAgB,CAAEQ,iBAJb,CAKLP,4BAA4B,CAAEQ,6BALzB,CAAP,CAOD","sourcesContent":["import { useCallback, useState } from 'react';\nimport type { GooglePay } from '../types';\nimport { useStripe } from './useStripe';\n\n/**\n * useGooglePay hook\n */\nexport function useGooglePay() {\n  const {\n    isGooglePaySupported,\n    initGooglePay,\n    presentGooglePay,\n    createGooglePayPaymentMethod,\n  } = useStripe();\n  const [loading, setLoading] = useState(false);\n\n  const _isGooglePaySupported = useCallback(\n    async (params?: GooglePay.IsSupportedParams) => {\n      setLoading(true);\n\n      const result = await isGooglePaySupported(params);\n      setLoading(false);\n\n      return result;\n    },\n    [isGooglePaySupported]\n  );\n\n  const _initGooglePay = useCallback(\n    async (params: GooglePay.InitParams) => {\n      setLoading(true);\n\n      const result = await initGooglePay(params);\n      setLoading(false);\n\n      return result;\n    },\n    [initGooglePay]\n  );\n\n  const _presentGooglePay = useCallback(\n    async (params: GooglePay.PresentParams) => {\n      setLoading(true);\n\n      const result = await presentGooglePay(params);\n      setLoading(false);\n\n      return result;\n    },\n    [presentGooglePay]\n  );\n\n  const _createGooglePayPaymentMethod = useCallback(\n    async (params: GooglePay.CreatePaymentMethodParams) => {\n      setLoading(true);\n\n      const result = await createGooglePayPaymentMethod(params);\n      setLoading(false);\n\n      return result;\n    },\n    [createGooglePayPaymentMethod]\n  );\n\n  return {\n    loading,\n    isGooglePaySupported: _isGooglePaySupported,\n    initGooglePay: _initGooglePay,\n    presentGooglePay: _presentGooglePay,\n    createGooglePayPaymentMethod: _createGooglePayPaymentMethod,\n  };\n}\n"]}