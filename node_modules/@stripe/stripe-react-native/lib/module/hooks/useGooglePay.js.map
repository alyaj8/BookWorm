{"version":3,"sources":["useGooglePay.tsx"],"names":["useGooglePay","isGooglePaySupported","initGooglePay","presentGooglePay","createGooglePayPaymentMethod","loading","setLoading","_isGooglePaySupported","params","result","_initGooglePay","_presentGooglePay","_createGooglePayPaymentMethod"],"mappings":"yVAAA,4BAEA,uCAKO,QAASA,CAAAA,YAAT,EAAwB,CAC7B,eAKI,2BALJ,CACEC,oBADF,YACEA,oBADF,CAEEC,aAFF,YAEEA,aAFF,CAGEC,gBAHF,YAGEA,gBAHF,CAIEC,4BAJF,YAIEA,4BAJF,CAMA,cAA8B,oBAAS,KAAT,CAA9B,qDAAOC,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,qBAAqB,CAAG,uBAC5B,iBAAOC,MAAP,+HACEF,UAAU,CAAC,IAAD,CAAV,CADF,kDAGuBL,oBAAoB,CAACO,MAAD,CAH3C,SAGQC,MAHR,eAIEH,UAAU,CAAC,KAAD,CAAV,CAJF,gCAMSG,MANT,uEAD4B,CAS5B,CAACR,oBAAD,CAT4B,CAA9B,CAYA,GAAMS,CAAAA,cAAc,CAAG,uBACrB,kBAAOF,MAAP,mIACEF,UAAU,CAAC,IAAD,CAAV,CADF,mDAGuBJ,aAAa,CAACM,MAAD,CAHpC,SAGQC,MAHR,gBAIEH,UAAU,CAAC,KAAD,CAAV,CAJF,iCAMSG,MANT,wEADqB,CASrB,CAACP,aAAD,CATqB,CAAvB,CAYA,GAAMS,CAAAA,iBAAiB,CAAG,uBACxB,kBAAOH,MAAP,mIACEF,UAAU,CAAC,IAAD,CAAV,CADF,mDAGuBH,gBAAgB,CAACK,MAAD,CAHvC,SAGQC,MAHR,gBAIEH,UAAU,CAAC,KAAD,CAAV,CAJF,iCAMSG,MANT,wEADwB,CASxB,CAACN,gBAAD,CATwB,CAA1B,CAYA,GAAMS,CAAAA,6BAA6B,CAAG,uBACpC,kBAAOJ,MAAP,mIACEF,UAAU,CAAC,IAAD,CAAV,CADF,mDAGuBF,4BAA4B,CAACI,MAAD,CAHnD,SAGQC,MAHR,gBAIEH,UAAU,CAAC,KAAD,CAAV,CAJF,iCAMSG,MANT,wEADoC,CASpC,CAACL,4BAAD,CAToC,CAAtC,CAYA,MAAO,CACLC,OAAO,CAAPA,OADK,CAELJ,oBAAoB,CAAEM,qBAFjB,CAGLL,aAAa,CAAEQ,cAHV,CAILP,gBAAgB,CAAEQ,iBAJb,CAKLP,4BAA4B,CAAEQ,6BALzB,CAAP,CAOD","sourcesContent":["import { useCallback, useState } from 'react';\nimport type { GooglePay } from '../types';\nimport { useStripe } from './useStripe';\n\n/**\n * useGooglePay hook\n */\nexport function useGooglePay() {\n  const {\n    isGooglePaySupported,\n    initGooglePay,\n    presentGooglePay,\n    createGooglePayPaymentMethod,\n  } = useStripe();\n  const [loading, setLoading] = useState(false);\n\n  const _isGooglePaySupported = useCallback(\n    async (params?: GooglePay.IsSupportedParams) => {\n      setLoading(true);\n\n      const result = await isGooglePaySupported(params);\n      setLoading(false);\n\n      return result;\n    },\n    [isGooglePaySupported]\n  );\n\n  const _initGooglePay = useCallback(\n    async (params: GooglePay.InitParams) => {\n      setLoading(true);\n\n      const result = await initGooglePay(params);\n      setLoading(false);\n\n      return result;\n    },\n    [initGooglePay]\n  );\n\n  const _presentGooglePay = useCallback(\n    async (params: GooglePay.PresentParams) => {\n      setLoading(true);\n\n      const result = await presentGooglePay(params);\n      setLoading(false);\n\n      return result;\n    },\n    [presentGooglePay]\n  );\n\n  const _createGooglePayPaymentMethod = useCallback(\n    async (params: GooglePay.CreatePaymentMethodParams) => {\n      setLoading(true);\n\n      const result = await createGooglePayPaymentMethod(params);\n      setLoading(false);\n\n      return result;\n    },\n    [createGooglePayPaymentMethod]\n  );\n\n  return {\n    loading,\n    isGooglePaySupported: _isGooglePaySupported,\n    initGooglePay: _initGooglePay,\n    presentGooglePay: _presentGooglePay,\n    createGooglePayPaymentMethod: _createGooglePayPaymentMethod,\n  };\n}\n"]}